{"version":3,"file":"static/webpack/static/development/pages/login.js.72c227e0698cef85ee66.hot-update.js","sources":["webpack:///./pages/login.js"],"sourcesContent":["import { connect } from 'react-redux';\r\nimport { Component } from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\nimport Theme from '../theme';\r\nimport Header from '../components/Header';\r\nimport LoginDialog from '../components/login/LoginDialog';\r\nimport SignupDialog from '../components/login/SignupDialog';\r\nimport { logout } from '../ducks/actions';\r\n\r\nimport '../styles/index.scss';\r\n\r\nconst mapStateToProps = (state) =>\r\n({\r\n    user: state,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) =>\r\n({\r\n    logout: (user) => dispatch(logout(user)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(class extends Component\r\n{\r\n    state =\r\n    {\r\n        loginOpen: false,\r\n        signupOpen: false,\r\n    };\r\n\r\n    render()\r\n    {\r\n        const { user, logout } = this.props;\r\n        const { loginOpen, signupOpen } = this.state;\r\n        const loggedIn = user.utoken ? (user.utoken === '' ? false : true) : false;\r\n        return (\r\n            <div className='bookshelf-page'>\r\n                <Theme>\r\n                    <Header />\r\n                    <Paper className='col bookshelf-login-main'>\r\n                        <Typography variant='title' color='default' align='center' className='bookshelf-login-main-title'>bookshelf</Typography>\r\n                        <div className='row align-center justify-center'>\r\n                            <Button variant='contained' color='primary' size='large'\r\n                                onClick={ () => this.setState({ loginOpen: true }) } disabled={ loggedIn }>Log In</Button>\r\n                        </div>\r\n                        <LoginDialog open={ loginOpen } close={ () => this.setState({ loginOpen: false }) } />\r\n                        <div className='row align-center justify-center'>\r\n                            <Button variant='text' color='primary' size='large'\r\n                                onClick={ () => this.setState({ signupOpen: true }) } disabled={ loggedIn }>Sign Up</Button>\r\n                        </div>\r\n                        <SignupDialog open={ signupOpen } close={ () => this.setState({ signupOpen: false }) } />\r\n                    </Paper>\r\n                    <div className='row align-center justify-center'>\r\n                        <Button variant='contained' color='secondary' size='large' onClick={ () => logout({ user_id: user.user_id || '', utoken: user.utoken || '' }) }>Logout</Button>\r\n                    </div>\r\n                    { JSON.stringify(user) }\r\n                </Theme>\r\n            </div>\r\n        );\r\n    }\r\n});"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAEA;AADA;AADA;AACA;AAIA;AAAA;AAEA;AAAA;AAAA;AADA;AADA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AACA;AADA;AACA;AADA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAIA;AACA;AAFA;AACA;AAJA;AAAA;AACA;AADA;AAAA;AAAA;AASA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AArCA;AACA;AADA;AAAA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}