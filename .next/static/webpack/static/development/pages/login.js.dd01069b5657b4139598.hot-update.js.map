{"version":3,"file":"static/webpack/static/development/pages/login.js.dd01069b5657b4139598.hot-update.js","sources":["webpack:///./components/login/SignupDialog.js"],"sourcesContent":["import { connect } from 'react-redux';\r\nimport { Component } from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport { login } from '../../ducks/actions';\r\n\r\nconst mapDispatchToProps = dispatch => (\r\n{\r\n    // login: (user) => dispatch(login(user)),\r\n});\r\n\r\nexport default connect(() => ({}), mapDispatchToProps)(class extends Component\r\n{\r\n    state =\r\n    {\r\n        username: '',\r\n        password: '',\r\n        name: '',\r\n    };\r\n\r\n    render()\r\n    {\r\n        // make sign up action\r\n        // find way to filter name, username and password to match out expectations\r\n        const { open, close } = this.props;\r\n        const { username, password, name } = this.state;\r\n        return (\r\n            <Dialog\r\n                open={ open }\r\n                onClose={ () => close() }\r\n                aria-labelledby='form-dialog-title'>\r\n                <DialogTitle id='form-dialog-title'>Signup</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>Signing Up allows you to create your own Bookshelf account!</DialogContentText>\r\n                    <TextField variant='outlined' margin='dense' id='name' label='Name' type='text'\r\n                        onChange={ (e) => this.setState({ name: e.target.value }) } value={ name } required autoFocus fullWidth />\r\n                    <TextField variant='outlined' margin='dense' id='username' label='Username' type='text'\r\n                        onChange={ (e) => this.setState({ username: e.target.value }) } value={ username } required fullWidth />\r\n                    <TextField variant='outlined' margin='dense' id='password' label='Password' type='password'\r\n                         onChange={ (e) => this.setState({ password: e.target.value }) } value={ password } required fullWidth />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={ () => close() } variant='text' color='default'>Cancel</Button>\r\n                    <Button variant='contained' color='primary'>Signup</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n});"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AADA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AACA;AADA;AACA;AADA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAIA;AACA;AACA;AAHA;AACA;AAJA;AAAA;AACA;AADA;AAAA;AAAA;AAUA;AACA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AAAA;AAAA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AApCA;AACA;AADA;AAAA;;;;A","sourceRoot":""}